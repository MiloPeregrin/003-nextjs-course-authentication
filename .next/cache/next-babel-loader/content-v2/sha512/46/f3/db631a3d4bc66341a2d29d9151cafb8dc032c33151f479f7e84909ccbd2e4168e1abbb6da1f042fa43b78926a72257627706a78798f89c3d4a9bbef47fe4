{"ast":null,"code":"import { connectToDatabase } from \"../../../lib/db\";\nimport { hashPassword } from \"../../lib/auth\";\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return;\n  }\n\n  const data = req.body;\n  const {\n    email,\n    password\n  } = data;\n\n  if (!email || !email.includes(\"@\") || !password || password.trim().length < 7) {\n    res.status(422).json({\n      message: \"Invalid input - password should also be at least 7 characters long\"\n    });\n    return;\n  }\n\n  const client = await connectToDatabase();\n  const db = client.db();\n  const hashedPassword = hashPassword(password);\n  const result = await db.collection().insertOne({\n    email: email,\n    password: hashedPassword\n  });\n  res.status(201).json({\n    message: \"Created user!\"\n  });\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/Downloads/nextjs-course-authentication/pages/api/auth/signup.js"],"names":["connectToDatabase","hashPassword","handler","req","res","method","data","body","email","password","includes","trim","length","status","json","message","client","db","hashedPassword","result","collection","insertOne"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iBAAlC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACD;;AAED,QAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,IAA5B;;AAEA,MACE,CAACE,KAAD,IACA,CAACA,KAAK,CAACE,QAAN,CAAe,GAAf,CADD,IAEA,CAACD,QAFD,IAGAA,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,GAAyB,CAJ3B,EAKE;AACAR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EACL;AAFiB,KAArB;AAKA;AACD;;AAED,QAAMC,MAAM,GAAG,MAAMhB,iBAAiB,EAAtC;AAEA,QAAMiB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,cAAc,GAAGjB,YAAY,CAACQ,QAAD,CAAnC;AAEA,QAAMU,MAAM,GAAG,MAAMF,EAAE,CAACG,UAAH,GAAgBC,SAAhB,CAA0B;AAC7Cb,IAAAA,KAAK,EAAEA,KADsC;AAE7CC,IAAAA,QAAQ,EAAES;AAFmC,GAA1B,CAArB;AAKAd,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB;AACD;;AAED,eAAeb,OAAf","sourcesContent":["import { connectToDatabase } from \"../../../lib/db\";\r\nimport { hashPassword } from \"../../lib/auth\";\r\n\r\nasync function handler(req, res) {\r\n  if (req.method !== \"POST\") {\r\n    return;\r\n  }\r\n\r\n  const data = req.body;\r\n\r\n  const { email, password } = data;\r\n\r\n  if (\r\n    !email ||\r\n    !email.includes(\"@\") ||\r\n    !password ||\r\n    password.trim().length < 7\r\n  ) {\r\n    res.status(422).json({\r\n      message:\r\n        \"Invalid input - password should also be at least 7 characters long\",\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  const client = await connectToDatabase();\r\n\r\n  const db = client.db();\r\n\r\n  const hashedPassword = hashPassword(password);\r\n\r\n  const result = await db.collection().insertOne({\r\n    email: email,\r\n    password: hashedPassword,\r\n  });\r\n\r\n  res.status(201).json({ message: \"Created user!\" });\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}