{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Downloads\\\\nextjs-course-authentication\\\\pages\\\\auth.js\";\nimport { useRouter } from \"next/router\";\nimport { getSession } from \"next-auth/client\";\nimport { useEffect, useState } from \"react\";\nimport AuthForm from \"../components/auth/auth-form\";\n\nfunction AuthPage() {\n  const {} = useState();\n  const router = useRouter();\n  useEffect(() => {\n    getSession().then(session => {\n      if (session) {\n        router.replace(\"/\");\n      } else {\n        setIsLoading(false);\n      }\n    });\n  }, [router]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\nexport default AuthPage;","map":{"version":3,"sources":["D:/Downloads/nextjs-course-authentication/pages/auth.js"],"names":["useRouter","getSession","useEffect","useState","AuthForm","AuthPage","router","then","session","replace","setIsLoading","isLoading"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,QAAP,MAAqB,8BAArB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,KAAKF,QAAQ,EAAnB;AACA,QAAMG,MAAM,GAAGN,SAAS,EAAxB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,UAAU,GAAGM,IAAb,CAAmBC,OAAD,IAAa;AAC7B,UAAIA,OAAJ,EAAa;AACXF,QAAAA,MAAM,CAACG,OAAP,CAAe,GAAf;AACD,OAFD,MAEO;AACLC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAND;AAOD,GARQ,EAQN,CAACJ,MAAD,CARM,CAAT;;AAUA,MAAIK,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeN,QAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { getSession } from \"next-auth/client\";\nimport { useEffect, useState } from \"react\";\n\nimport AuthForm from \"../components/auth/auth-form\";\n\nfunction AuthPage() {\n  const [] = useState();\n  const router = useRouter();\n\n  useEffect(() => {\n    getSession().then((session) => {\n      if (session) {\n        router.replace(\"/\");\n      } else {\n        setIsLoading(false);\n      }\n    });\n  }, [router]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  return <AuthForm />;\n}\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}